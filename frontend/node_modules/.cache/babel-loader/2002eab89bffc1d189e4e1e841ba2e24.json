{"ast":null,"code":"var _jsxFileName = \"/Users/ivantembe/Desktop/engeeniering/React-Mastering/components/video-library/frontend/src/components/MovieForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport axios from \"axios\";\nimport Form from \"./authentication/Form\";\nimport { getMovie, saveMovie } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\n\nclass MovieForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: \"\",\n        genreId: \"\",\n        numberInStock: \"\",\n        dailyRentalRate: \"\"\n      },\n      genres: [],\n      errors: {}\n    };\n    this.schema = {\n      _id: Joi.string(),\n      title: Joi.string().required().label(\"Title\"),\n      genreId: Joi.string().required().label(\"Genre\"),\n      numberInStock: Joi.number().required().min(0).max(100).label(\"Number in stock\"),\n      dailyRentalRate: Joi.number().required().min(0).max(10).label(\"Rate\")\n    };\n\n    this.doSubmit = () => {\n      // Calling server\n      // saveMovie(this.state.data);\n      axios.post(\"/movies\", this.state.data).then(response => {\n        console.log(response.data);\n      });\n      this.props.history.push(\"/movies\");\n    };\n  }\n\n  componentDidMount() {\n    const genres = getGenres();\n    this.setState({\n      genres\n    });\n    const movieId = this.props.match.path;\n    if (movieId === \"/movies/new\") return;\n    const movie = getMovie(movieId);\n    if (!movie) return this.props.history.replace(\"/not-found\");\n    this.setState({\n      data: this.mapToViewModel(movie)\n    });\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate\n    };\n  }\n\n  render() {\n    const {\n      genres: options\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-50 my-0 mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Create Movie\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, this.renderInput(\"title\", \"Title\", \"text\", true), this.renderSelect(\"genreId\", \"Genre\", options), this.renderInput(\"numberInStock\", \"Number in stock\"), this.renderInput(\"dailyRentalRate\", \"Rate\"), this.renderButton(\"Save\")));\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["/Users/ivantembe/Desktop/engeeniering/React-Mastering/components/video-library/frontend/src/components/MovieForm.jsx"],"names":["React","Joi","axios","Form","getMovie","saveMovie","getGenres","MovieForm","state","data","title","genreId","numberInStock","dailyRentalRate","genres","errors","schema","_id","string","required","label","number","min","max","doSubmit","post","then","response","console","log","props","history","push","componentDidMount","setState","movieId","match","path","movie","replace","mapToViewModel","genre","render","options","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport axios from \"axios\";\nimport Form from \"./authentication/Form\";\nimport { getMovie, saveMovie } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\n    genres: [],\n    errors: {},\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in stock\"),\n    dailyRentalRate: Joi.number().required().min(0).max(10).label(\"Rate\"),\n  };\n\n  componentDidMount() {\n    const genres = getGenres();\n    this.setState({ genres });\n\n    const movieId = this.props.match.path;\n    if (movieId === \"/movies/new\") return;\n\n    const movie = getMovie(movieId);\n    if (!movie) return this.props.history.replace(\"/not-found\");\n    this.setState({ data: this.mapToViewModel(movie) });\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n\n  doSubmit = () => {\n    // Calling server\n    // saveMovie(this.state.data);\n    axios.post(\"/movies\", this.state.data).then((response) => {\n      console.log(response.data);\n    });\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    const { genres: options } = this.state;\n    return (\n      <div className=\"w-50 my-0 mx-auto\">\n        <h2 className=\"mb-4\">Create Movie</h2>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\", \"text\", true)}\n          {this.renderSelect(\"genreId\", \"Genre\", options)}\n          {this.renderInput(\"numberInStock\", \"Number in stock\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/ivantembe/Desktop/engeeniering/React-Mastering/components/video-library/src/components/Movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./common/Pagination\";\nimport { paginate } from \"./utilities/paginate\";\nimport ListGroup from \"./ListGroup\";\nimport MoviesTable from \"./MoviesTable\";\nimport SearchBox from \"./SearchBox\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      selectedGenre: {},\n      pageSize: 4,\n      currentPage: 1,\n      searchQuery: \"\"\n    };\n\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n\n    this.handleGenre = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1,\n        searchQuery: \"\"\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      movies,\n      pageSize,\n      currentPage,\n      genres,\n      selectedGenre,\n      searchQuery\n    } = this.state;\n    let filterMovesPerGenre = movies;\n    if (searchQuery) filterMovesPerGenre = movies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));else if (selectedGenre && selectedGenre._id) filterMovesPerGenre = movies.filter(m => m.genre.name === selectedGenre.name);\n    const moviesPerPage = paginate(filterMovesPerGenre, currentPage, pageSize);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      genres: genres,\n      onGenreChange: this.handleGenre,\n      selectedGenre: selectedGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchBox, {\n      value: searchQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MoviesTable, {\n      filterMovesPerGenre: filterMovesPerGenre,\n      moviesPerPage: moviesPerPage,\n      onDelete: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemCount: filterMovesPerGenre.length,\n      pageSize: pageSize,\n      currentPage: currentPage,\n      onPageChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/ivantembe/Desktop/engeeniering/React-Mastering/components/video-library/src/components/Movies.jsx"],"names":["React","Component","getMovies","getGenres","Pagination","paginate","ListGroup","MoviesTable","SearchBox","Movies","state","movies","genres","selectedGenre","pageSize","currentPage","searchQuery","handleSearch","query","setState","handleGenre","genre","handlePageChange","page","handleDelete","movie","filter","m","_id","componentDidMount","name","render","filterMovesPerGenre","title","toLowerCase","startsWith","moviesPerPage","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport Pagination from \"./common/Pagination\";\nimport { paginate } from \"./utilities/paginate\";\nimport ListGroup from \"./ListGroup\";\nimport MoviesTable from \"./MoviesTable\";\nimport SearchBox from \"./SearchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    selectedGenre: {},\n    pageSize: 4,\n    currentPage: 1,\n    searchQuery: \"\",\n  };\n\n  componentDidMount() {\n    const genres = [{ name: \"All Genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleGenre = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1, searchQuery: \"\" });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({\n      movies,\n    });\n  };\n\n  render() {\n    const {\n      movies,\n      pageSize,\n      currentPage,\n      genres,\n      selectedGenre,\n      searchQuery,\n    } = this.state;\n\n    let filterMovesPerGenre = movies;\n    if (searchQuery)\n      filterMovesPerGenre = movies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filterMovesPerGenre = movies.filter(\n        (m) => m.genre.name === selectedGenre.name\n      );\n\n    const moviesPerPage = paginate(filterMovesPerGenre, currentPage, pageSize);\n\n    return (\n      <React.Fragment>\n        <div className=\"d-flex\">\n          <ListGroup\n            genres={genres}\n            onGenreChange={this.handleGenre}\n            selectedGenre={selectedGenre}\n          />\n          <div>\n            <SearchBox value={searchQuery} />\n            <MoviesTable\n              filterMovesPerGenre={filterMovesPerGenre}\n              moviesPerPage={moviesPerPage}\n              onDelete={this.handleDelete}\n            />\n            <Pagination\n              itemCount={filterMovesPerGenre.length}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={this.handlePageChange}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}